# A default test vhost with SSL
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name vhost1.site;
    set $base /srv/www/htdocs;
    root $base/vhost1;

    # SSL
    ssl_certificate /etc/nginx/ssl/vhost1.site.crt;
    ssl_certificate_key /etc/nginx/ssl/vhost1.site.key;

    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # security
    include nginxconfig.io/security.conf;

    # logging
    access_log /var/log/nginx/vhost1-access.log main;
    error_log /dev/stderr warn;
    # error_log /var/log/nginx/vhost1-error.log warn;

    # Cache by default
    set $no_cache 0;

    # Check for cache bypass
    if ($arg_skipcache = 1) {
      set $no_cache 1;
    }

    # index.php
    index index.php;

    # index.html fallback
    location / {
        try_files $uri $uri/ =404;
    }

    # redirect server error pages to the static page /50x.html
    error_page 500 502 503 504  /50x.html;
    location = /50x.html {
        root $base/html;
    }

    # redirect server error pages to the static page /404.html
    error_page 404 /404.html;
    location = /404.html {
        root $base/html;
    }

    # handle .php
    location ~ \.php$ {
	# Enable limit per Remote_IP
	limit_req zone=PERIP2 burst=5 nodelay;
	
	# pass to php-fpm
	include nginxconfig.io/php_fastcgi.conf;
	
	# Enable cache
	fastcgi_cache ZONE_1;
	fastcgi_cache_valid 200 15m;
	fastcgi_cache_valid 301 15m;
	fastcgi_cache_valid 404 10m;
	fastcgi_cache_valid 403 10m;
	fastcgi_cache_valid 408 60m;
	fastcgi_cache_valid 429 60m;
	fastcgi_cache_valid 503 60m;
	fastcgi_cache_bypass $no_cache;
	fastcgi_no_cache $no_cache;
    }

    # check on PHP-FPM
    location ~^/(ping|status)$ {
	access_log /dev/stdout;
	error_log /dev/stderr;
	#allow 127.0.0.1;
        #deny all;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_index index.php;
        fastcgi_pass unix:/var/run/php-fpm.sock;
    }
    
    # additional config
    include nginxconfig.io/general.conf;
}

# HTTP redirect
server {
    listen 80;
    listen [::]:80;
    server_name vhost1.site;
    return 301 https://vhost1.site$request_uri;
}
